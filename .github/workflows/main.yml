name: go-devsecops-pipeline
on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
    
env:
  IMAGE_NAME: hi-web-app
  REGISTRY: registry.digitalocean.com/hi-web-app
jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
  gosec:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Run GoSec Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...
  secretsCheck:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: max/secret-scan@master
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name : checkout
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: run tests
        run: go test -json ./... > test.json

      - name: annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.2.0
        with:
          test-results: test.json
  build_and_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: test
  
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
  
      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
  
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_API_TOKEN }}
  
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
  
      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
  
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build_and_push
  
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          HOST: ${{ secrets.DO_IP_ADDRESS }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,COMMAND
          script: |
            # Stop running container
            # docker stop $(echo $IMAGE_NAME)
            # # Remove old container
            # docker rm $(echo $IMAGE_NAME)
            # # Run a new container from a new image
            docker pull $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
            docker run -d \
            --restart always \
            -p 8000:8000 \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)